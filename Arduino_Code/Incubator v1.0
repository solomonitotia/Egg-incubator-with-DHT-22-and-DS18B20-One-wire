//#include <WaziDev.h>
#include <OneWire.h> 
#include <LiquidCrystal_I2C.h>
#include <DallasTemperature.h>
#include "DHT.h"
/********************************************************************/
// Data wire is plugged into pin 2 on the Arduino 
#define ONE_WIRE_BUS 2 
#define DHTPIN 3
#define RELAY 4  
/********************************************************************/
// Setup a oneWire instance to communicate with any OneWire devices  
// (not just Maxim/Dallas temperature ICs) 
OneWire oneWire(ONE_WIRE_BUS); 
/********************************************************************/
// Pass our oneWire reference to Dallas Temperature. 
DallasTemperature sensors(&oneWire);
#define DHTTYPE DHT22

DHT dht(DHTPIN, DHTTYPE);
LiquidCrystal_I2C lcd(0x27, 16, 2);
//WaziDev wazidev("Chicks01", 2);
/********************************************************************/ 
void setup(void) 
{ 
// wazidev.setup();  
 // start serial port 
 Serial.begin(38400); 
 pinMode(RELAY, OUTPUT);
 lcd.begin(16,2); 
lcd.backlight();
lcd.clear(); 
lcd.setCursor(0,0); 
lcd.print("Incubator V1.0"); 
Serial.println("Incubator V1.0");
Serial.println("Hatch Them");
lcd.setCursor(0,1); // set cursor to column 0, row 1
lcd.print("Hatch Them!"); 
sensors.begin(); 
dht.begin();
delay(2000);
} 
void loop(void) 
{ 
 delay(2000); 

Serial.println(" Requesting Data...");
 float h = dht.readHumidity();
 float t = dht.readTemperature();
 float f = dht.readTemperature(true); 
 sensors.requestTemperatures(); // Send the command to get temperature readings 
 int is,im,ih,id,ida; // variables for time
float time,s1,m1,h1,d1; // Set up variables to calculate time
time=millis(); // Get time in milliseconds since tunit turn on
s1=time/1000; // Convert time to seconds, minutes, hours, days
m1=s1/60;
h1=m1/60;
d1=h1/24;
id=int(d1); // Strip out remainder to leave Days:Hours:Minutes:Seconds
ih=int((d1-int(d1))*24);
im=int((h1-int(h1))*60);
is=int((m1-int(m1))*60);
ida=21-id;
if (isnan(h) || isnan(t) || isnan(f)) {
lcd.clear();
lcd.setCursor(0,0);
lcd.print("failed to read");
Serial.println("Failed to read from DHT sensor!");
   return;
  }
  else 
  {
 
 float hif = dht.computeHeatIndex(f, h);
 float hic = dht.computeHeatIndex(t, h, false);
 lcd.clear(); // Clear the LCD
 lcd.setCursor(0,0);
 lcd.print("H=");
 lcd.print(h,1);
 lcd.print("%");
 lcd.print("T=");
 lcd.print(sensors.getTempCByIndex(0));
 lcd.print("C");
 lcd.setCursor(0,2);
lcd.print("Time:");
// Print time in format Time: xxd:xxh:xxm:xxs
lcd.print(id);
lcd.print("d:");
lcd.print(ih);
lcd.print("h:");
lcd.print(im);
lcd.print("m:");
lcd.print(is);
lcd.print("s");
lcd.setCursor(0,3);
// Print days left till hatch
lcd.print("Days left:");
lcd.print(21-id);
 Serial.print("Humidity: ");
 Serial.print(h);
 Serial.println(" %\t");
 Serial.print("DHT22 Temperature: ");
 Serial.print(t);
 Serial.print(" *C ");
 Serial.print(f);
 Serial.println(" *F\t");
 Serial.print("Heat index: ");
 Serial.print(hic);
 Serial.print(" *C ");
 Serial.print(hif);
 Serial.println(" *F");
 Serial.print("Ds8b20 Temperature is: "); 
 Serial.println(sensors.getTempCByIndex(0)); // Why "byIndex"?  
// WaziDev::SensorVal fields[4] = {{"DTEM", t}, {"DHUM", h},{"OTEM",sensors.getTempCByIndex(0)}, {"TIME",21-id}};
// wazidev.sendSensorValues(fields, 4);
 Serial.flush();
 //Temperature controller
if(sensors.getTempCByIndex(0)<38.00){ // Set the temperature for the relay to come on (somewhere around 90-101F to get eggs to hatch)
 digitalWrite(RELAY,LOW); // Turns ON Relay
//lcd.print("Bulb ON");
Serial.println("Bulb ON");
}
else if (sensors.getTempCByIndex(0)>= 38.5){
 digitalWrite(RELAY,HIGH); // Turns Relay Off
//lcd.print("Bulb OFF");
Serial.println("Bulb OFF");
}

delay(5000); 
} 
}
